# Alternative Dockerfile for environments where standard installation fails
FROM node:18-alpine

# Install system dependencies first
RUN apk add --no-cache \
    chromium \
    chromium-chromedriver \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    bash \
    curl \
    git

# Set Chromium executable path for Playwright
ENV PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=true

# Create app directory
WORKDIR /app

# Copy package files first (for better caching)
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Try to install Playwright browsers, but don't fail if it doesn't work
RUN npx playwright install chromium || \
    npx playwright install chromium --with-deps || \
    echo "Warning: Playwright browser installation failed, using system browser"

# Copy application code
COPY . .

# Make scripts executable
RUN chmod +x scripts/*.sh

# Create a startup script that handles browser issues
RUN echo '#!/bin/sh' > /app/docker-start.sh && \
    echo 'echo "🚀 Starting Trade Pulse Backend in Docker..."' >> /app/docker-start.sh && \
    echo 'echo "🔍 Checking browser availability..."' >> /app/docker-start.sh && \
    echo 'if [ -f "/usr/bin/chromium-browser" ]; then' >> /app/docker-start.sh && \
    echo '  echo "✅ System Chromium found at /usr/bin/chromium-browser"' >> /app/docker-start.sh && \
    echo '  export PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=/usr/bin/chromium-browser' >> /app/docker-start.sh && \
    echo 'else' >> /app/docker-start.sh && \
    echo '  echo "⚠️  System Chromium not found, trying Playwright browsers..."' >> /app/docker-start.sh && \
    echo 'fi' >> /app/docker-start.sh && \
    echo 'echo "🎭 Starting application..."' >> /app/docker-start.sh && \
    echo 'exec npm start' >> /app/docker-start.sh && \
    chmod +x /app/docker-start.sh

# Expose port
EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:4000/api/health || exit 1

# Use our custom startup script
CMD ["/app/docker-start.sh"]
